###############################################################################
# curl command tests for templeton
#
#

#use Yahoo::Miners::Test::PigSetup;

#PigSetup::setup();

#my $me = `whoami`;
#chomp $me;

$cfg = {
  'driver' => 'Curl',

  'groups' => [
    {
      'name' => 'TestWebHdfsReadOps',
      'tests' => [
        {
          #check for presence of /tmp 
          'num' => 1,
	  'method' => 'GET',
          'url' => ':WEBHDFS_URL:/webhdfs/v1/tmp?op=liststatus&user.name=:UNAME:',
	  
	  #results
	  'status_code' => 200,
        },
        {
          #check for presence of /tmp_nosuchfile (not present)
          'num' => 2,
	  'method' => 'GET',
          'url' => ':WEBHDFS_URL:/webhdfs/v1/tmp_nosuchfile?op=liststatus&user.name=:UNAME:',
	  
	  #results
	  'status_code' => 404,
        },
      ]
    },
    {
      'name' => 'TestWebHdfsWrite',
      'tests' => [
        {
          #write a file to /tmp
          'num' => 1,
	  'method' => 'GET',
          'url' => ':WEBHDFS_URL:/webhdfs/v1/tmp/nums.txt?op=create&user.name=:UNAME:',
	  'upload_file' => ':INPDIR_LOCAL:/nums.txt',
	  #results
	  'status_code' => 100,
        },

      ]
    },

    {
      'name' => 'Hcat_table',
      'tests' => [
        {
          #drop table if exists
          'num' => 1,
	  'method' => 'POST',
          'url' => ':TEMPLETON_URL:/templeton/v1/ddl.json',
	  'status_code' => 200,
	  'post_options' => ['user.name=:UNAME:','exec=drop table if exists templetontest_tab2'],
	  'json_field_match' => {'stderr' => 'OK'},

        },
        {
          #create table
          'num' => 2,
	  'method' => 'POST',
          'url' => ':TEMPLETON_URL:/templeton/v1/ddl.json',
	  'status_code' => 200,
	  'post_options' => ['user.name=:UNAME:','exec=create table templetontest_tab2(i int, j bigint) STORED AS rcfile;'],
	  'json_field_match' => {'stderr' => 'OK', 'exitcode' => '^0$'}
        },
        {
          #show tables
          'num' => 3,
	  'method' => 'POST',
          'url' => ':TEMPLETON_URL:/templeton/v1/ddl.json',
	  'status_code' => 200,
	  'post_options' => ['user.name=:UNAME:','exec=show tables;'],
	  'json_field_match' => {'stderr' => 'OK', 'stdout' => 'templetontest_tab2', 'exitcode' => '^0$'}
        },
        {
          #create table again, should fail
          'num' => 4,
	  'method' => 'POST',
          'url' => ':TEMPLETON_URL:/templeton/v1/ddl.json',
	  'status_code' => 200,
	  'post_options' => ['user.name=:UNAME:','exec=create table templetontest_tab2(i int, j bigint) STORED AS rcfile;'],
	  'json_field_match' => { 'exitcode' => '^9$'}
        },
        {
          #describe table
          'num' => 5,
	  'method' => 'POST',
          'url' => ':TEMPLETON_URL:/templeton/v1/ddl.json',
	  'status_code' => 200,
	  'post_options' => ['user.name=:UNAME:','exec=describe templetontest_tab2;'],
	  'json_field_match' => { 'stdout' => '.*i\s+int.*\n.*j.*bigint.*', 'exitcode' => '^0$', 'stderr' => 'OK'}
        },
        {
          #alter table - file format
          'num' => 6,
	  'method' => 'POST',
          'url' => ':TEMPLETON_URL:/templeton/v1/ddl.json',
	  'status_code' => 200,
	  'post_options' => ['user.name=:UNAME:','exec=alter table templetontest_tab2 SET FILEFORMAT rcfile;'],
	  'json_field_match' => { 'exitcode' => '^0$', 'stderr' => 'OK'}
        },
        {
          #alter table - add column
          'num' => 7,
	  'method' => 'POST',
          'url' => ':TEMPLETON_URL:/templeton/v1/ddl.json',
	  'status_code' => 200,
	  'post_options' => ['user.name=:UNAME:','exec=alter table templetontest_tab2 add columns(newcolx int);'],
	  'json_field_match' => { 'exitcode' => '^0$', 'stderr' => 'OK'}
        },
        {
          #describe table
          'num' => 8,
	  'method' => 'POST',
          'url' => ':TEMPLETON_URL:/templeton/v1/ddl.json',
	  'status_code' => 200,
	  'post_options' => ['user.name=:UNAME:','exec=describe templetontest_tab2;'],
	  'json_field_match' => { 'stdout' => '.*newcolx\s+int.*', 'exitcode' => '^0$', 'stderr' => 'OK'}
        },
      ]
    },

    {
      'name' => 'TestStreaming',
      'tests' => [
        {
          'num' => 1,
	  'method' => 'POST',
          'url' => ':TEMPLETON_URL:/templeton/v1/mapreduce/streaming.json',
	  'post_options' => ['user.name=:UNAME:','input=:INPDIR_HDFS:/nums.txt','output=:OUTDIR:/mycounts', 
			     'mapper=/bin/cat', 'reducer=/usr/bin/wc'],
	  'json_field_match' => { 'stdout' => '.*', 'exitcode' => '^0$', 'stderr' => '.*'},
	  #results
	  'status_code' => 200,
	  'check_job_created' => 1,
	  'check_job_complete' => 'SUCCESS', #TODO - implement this check
	  'check_call_back' => 1,
        },
      ]
    },

    {
      'name' => 'TestMapReduce',
      'tests' => [
        {

          'num' => 1,
	  'method' => 'POST',
          'url' => ':TEMPLETON_URL:/templeton/v1/mapreduce/jar.json',
	  'post_options' => ['user.name=:UNAME:','arg=:INPDIR_HDFS:/nums.txt', 'arg= :OUTDIR:/wc.txt', 
			     'jar=:INPDIR_HDFS:/hexamples.jar', 'class=wordcount', ],
	  'json_field_match' => { 'stdout' => '.*', 'exitcode' => '^0$', 'stderr' => '.*'},
	  #results
	  'status_code' => 200,
	  'check_job_created' => 1,
	  'check_job_complete' => 'SUCCESS', #TODO - implement this check
	  'check_call_back' => 1,
        },
      ]
    },

    {
      'name' => 'TestPig',
      'tests' => [
        {
	  #test syntax error
          'num' => 1,
	  'method' => 'POST',
          'url' => ':TEMPLETON_URL:/templeton/v1/pig.json',
	  'post_options' => ['user.name=:UNAME:','execute=asdf', ],
	  'json_field_match' => { 'stdout' => '.*templeton-job-id:.*', 'exitcode' => '^0$', 'stderr' => '.*'},
	  #results
	  'status_code' => 200,
	  'check_job_created' => 1,
	  'check_job_complete' => 'FAILURE', 
	  'check_call_back' => 1,
        },
        {
	  #valid syntax, hdfs operation through pig
          'num' => 2,
	  'method' => 'POST',
          'url' => ':TEMPLETON_URL:/templeton/v1/pig.json',
	  'post_options' => ['user.name=:UNAME:','execute=fs -ls :INPDIR_HDFS:;', ],
	  'json_field_match' => { 'stdout' => '.*templeton-job-id:.*', 'exitcode' => '^0$', 'stderr' => '.*'},
	  #results
	  'status_code' => 200,
	  'check_job_created' => 1,
	  'check_job_complete' => 'SUCCESS', 
	  'check_call_back' => 1,
        },
        {
	  #syntax check  - valid syntax
          'num' => 3,
	  'method' => 'POST',
          'url' => ':TEMPLETON_URL:/templeton/v1/pig.json',
	  'post_options' => ['user.name=:UNAME:','arg=-check', 'file=:INPDIR_HDFS:/loadstore.pig', 'arg=-p', 'arg=INPDIR=:INPDIR_HDFS:','arg=-p', 'arg=OUTDIR=:OUTDIR:', ],
	  'json_field_match' => { 'stdout' => '.*templeton-job-id:.*', 'exitcode' => '^0$', 'stderr' => '.*'},
	  #results
	  'status_code' => 200,
	  'check_job_created' => 1,
	  'check_job_complete' => 'SUCCESS', 
	  'check_call_back' => 1,
        },
        {
	  #syntax check cmd - valid syntax
          'num' => 4,
	  'method' => 'POST',
          'url' => ':TEMPLETON_URL:/templeton/v1/pig.json',
	  'post_options' => ['user.name=:UNAME:', 'arg=-d', 'arg=INFO' , 'execute=fs -ls :INPDIR_HDFS: ', ],
	  'json_field_match' => { 'stdout' => '.*templeton-job-id:.*', 'exitcode' => '^0$', 'stderr' => '.*'},
	  #results
	  'status_code' => 200,
	  'check_job_created' => 1,
	  'check_job_complete' => 'SUCCESS', 
	  'check_call_back' => 1,
        },

        {
	  #a simple load store script
          'num' => 5,
	  'method' => 'POST',
          'url' => ':TEMPLETON_URL:/templeton/v1/pig.json',
	  'post_options' => ['user.name=:UNAME:', 'arg=-p', 'arg=INPDIR=:INPDIR_HDFS:','arg=-p', 'arg=OUTDIR=:OUTDIR:', 'file=:INPDIR_HDFS:/loadstore.pig', ],
	  'json_field_match' => { 'stdout' => '.*templeton-job-id:.*', 'exitcode' => '^0$', 'stderr' => '.*'},
	  #results
	  'status_code' => 200,
	  'check_job_created' => 1,
	  'check_job_complete' => 'SUCCESS', 
	  'check_call_back' => 1,
        },


        {
	  #pig query registering jar
          'num' => 6,
	  'method' => 'POST',
          'url' => ':TEMPLETON_URL:/templeton/v1/pig.json',
	  'post_options' => ['user.name=:UNAME:', 'arg=-p', 'arg=INPDIR=:INPDIR_HDFS:','arg=-p', 'arg=OUTDIR=:OUTDIR:', 'file=:INPDIR_HDFS:/jarregistered.pig',
	  		    'files=:INPDIR_HDFS:/piggybank.jar' ],
	  'json_field_match' => { 'stdout' => '.*templeton-job-id:.*', 'exitcode' => '^0$', 'stderr' => '.*'},
	  #results
	  'status_code' => 200,
	  'check_job_created' => 1,
	  'check_job_complete' => 'SUCCESS', 
	  'check_call_back' => 1,
        },

        {
	  #macro
          'num' => 7,
	  'method' => 'POST',
          'url' => ':TEMPLETON_URL:/templeton/v1/pig.json',
	  'post_options' => ['user.name=:UNAME:', 'arg=-p', 'arg=INPDIR=:INPDIR_HDFS:','arg=-p', 'arg=OUTDIR=:OUTDIR:', 'file=:INPDIR_HDFS:/rowcount_withmacro.pig',
	  		    'files=:INPDIR_HDFS:/rowcountmacro.pig' ],
	  'json_field_match' => { 'stdout' => '.*templeton-job-id:.*', 'exitcode' => '^0$', 'stderr' => '.*'},
	  #results
	  'status_code' => 200,
	  'check_job_created' => 1,
	  'check_job_complete' => 'SUCCESS', 
	  'check_call_back' => 1,
        },

        {
	  #no file to be copied, should result in launcher job error 
          'num' => 8,
	  'method' => 'POST',
          'url' => ':TEMPLETON_URL:/templeton/v1/pig.json',
	  'post_options' => ['user.name=:UNAME:', 'arg=-p', 'arg=INPDIR=:INPDIR_HDFS:','arg=-p', 'arg= OUTDIR=:OUTDIR:', 'file=:INPDIR_HDFS:/no_such_file.pig',
	  		    'files=:INPDIR_HDFS:/rowcountmacro.pig' ],
	  'json_field_match' => { 'error' => 'does not exist'},
	  #results
	  'status_code' => 400,
        },
	


	#test 9
	#TODO jython test




      ]
    },

    {
      'name' => 'TestHive',
      'tests' => [
        {
	  #test syntax error
          'num' => 1,
	  'method' => 'POST',
          'url' => ':TEMPLETON_URL:/templeton/v1/hive.json',
	  'post_options' => ['user.name=:UNAME:','execute=asdf', ],
	  'json_field_match' => { 'stdout' => '.*templeton-job-id:.*', 'exitcode' => '^0$', 'stderr' => '.*'},
	  #results
	  'status_code' => 200,
	  'check_job_created' => 1,
	  'check_job_complete' => 'FAILURE', 

        },
 
        {
	  #test show tables
          'num' => 2,
	  'method' => 'POST',
          'url' => ':TEMPLETON_URL:/templeton/v1/hive.json',
	  'post_options' => ['user.name=:UNAME:','execute=show tables', ],
	  'json_field_match' => { 'stdout' => '.*templeton-job-id:.*', 'exitcode' => '^0$', 'stderr' => '.*'},
	  #results
	  'status_code' => 200,
	  'check_job_created' => 1,
	  'check_job_complete' => 'SUCCESS', 
	  'check_call_back' => 1,
        },

        {
	  #test show tables
          'num' => 3,
	  'method' => 'POST',
          'url' => ':TEMPLETON_URL:/templeton/v1/hive.json',
	  'post_options' => ['user.name=:UNAME:','execute=drop table if exists mynums;', ],
	  'json_field_match' => { 'stdout' => '.*templeton-job-id:.*', 'exitcode' => '^0$', 'stderr' => '.*'},
	  #results
	  'status_code' => 200,
	  'check_job_created' => 1,
	  'check_job_complete' => 'SUCCESS', 
	  'check_call_back' => 1,
        },
        {
          #test show tables
          'num' => 4,
          'method' => 'POST',
          'url' => ':TEMPLETON_URL:/templeton/v1/hive.json',
          'post_options' => ['user.name=:UNAME:','execute=create external table mynums(a int, b int) location ":INPDIR_HDFS:/numstable/";', ],
          'json_field_match' => { 'stdout' => '.*templeton-job-id:.*', 'exitcode' => '^0$', 'stderr' => '.*'},
          #results
          'status_code' => 200,
          'check_job_created' => 1,
          'check_job_complete' => 'SUCCESS',
          'check_call_back' => 1,
        },

        {
	  #test describe
          'num' => 5,
	  'method' => 'POST',
          'url' => ':TEMPLETON_URL:/templeton/v1/hive.json',
	  'post_options' => ['user.name=:UNAME:','execute=describe formatted mynums', ],
	  'json_field_match' => { 'stdout' => '.*templeton-job-id:.*', 'exitcode' => '^0$', 'stderr' => '.*'},
	  #results
	  'status_code' => 200,
	  'check_job_created' => 1,
	  'check_job_complete' => 'SUCCESS', 
 	  'check_call_back' => 1,
        },

        {
	  #test select *
          'num' => 6,
	  'method' => 'POST',
          'url' => ':TEMPLETON_URL:/templeton/v1/hive.json',
	  'post_options' => ['user.name=:UNAME:','execute=select * from mynums', ],
	  'json_field_match' => { 'stdout' => '.*templeton-job-id:.*', 'exitcode' => '^0$', 'stderr' => '.*'},
	  #results
	  'status_code' => 200,
	  'check_job_created' => 1,
	  'check_job_complete' => 'SUCCESS', 
	  'check_call_back' => 1,
        },

        {
	  #test select a,b
          'num' => 7,
	  'method' => 'POST',
          'url' => ':TEMPLETON_URL:/templeton/v1/hive.json',	
	  'post_options' => ['user.name=:UNAME:','execute=select a,b from mynums', ],
	  'json_field_match' => { 'stdout' => '.*templeton-job-id:.*', 'exitcode' => '^0$', 'stderr' => '.*'},
	  #results
	  'status_code' => 200,
	  'check_job_created' => 1,
	  'check_job_complete' => 'SUCCESS', 
	  'check_call_back' => 1,

        },


        {
	  #test udfs : select a,rand(b)
          'num' => 8,
	  'method' => 'POST',
          'url' => ':TEMPLETON_URL:/templeton/v1/hive.json',
	  'post_options' => ['user.name=:UNAME:','execute=select a,rand(b) from mynums', ],
	  'json_field_match' => { 'stdout' => '.*templeton-job-id:.*', 'exitcode' => '^0$', 'stderr' => '.*'},
	  #results
	  'status_code' => 200,
	  'check_job_created' => 1,
	  'check_job_complete' => 'SUCCESS', 

        },



       ]
    },






    ],
  },
;

